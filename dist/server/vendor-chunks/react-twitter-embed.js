"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-twitter-embed";
exports.ids = ["vendor-chunks/react-twitter-embed"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-twitter-embed/dist/index.modern.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-twitter-embed/dist/index.modern.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterDMButton: () => (/* binding */ TwitterDMButton),\n/* harmony export */   TwitterFollowButton: () => (/* binding */ TwitterFollowButton),\n/* harmony export */   TwitterHashtagButton: () => (/* binding */ TwitterHashtagButton),\n/* harmony export */   TwitterMentionButton: () => (/* binding */ TwitterMentionButton),\n/* harmony export */   TwitterMomentShare: () => (/* binding */ TwitterMomentShare),\n/* harmony export */   TwitterOnAirButton: () => (/* binding */ TwitterOnAirButton),\n/* harmony export */   TwitterShareButton: () => (/* binding */ TwitterShareButton),\n/* harmony export */   TwitterTimelineEmbed: () => (/* binding */ TwitterTimelineEmbed),\n/* harmony export */   TwitterTweetEmbed: () => (/* binding */ TwitterTweetEmbed),\n/* harmony export */   TwitterVideoEmbed: () => (/* binding */ TwitterVideoEmbed)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar twitterWidgetJs = \"https://platform.twitter.com/widgets.js\";\nvar methodName = \"createTimeline\";\nvar TwitterTimelineEmbed = function TwitterTimelineEmbed(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    var buildOptions = function buildOptions() {\n        var options = Object.assign({}, props.options);\n        if (props !== null && props !== void 0 && props.autoHeight) {\n            var _ref$current, _ref$current$parentNo;\n            options.height = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : (_ref$current$parentNo = _ref$current.parentNode) === null || _ref$current$parentNo === void 0 ? void 0 : _ref$current$parentNo.offsetHeight;\n        }\n        options = Object.assign({}, options, {\n            theme: props === null || props === void 0 ? void 0 : props.theme,\n            linkColor: props === null || props === void 0 ? void 0 : props.linkColor,\n            borderColor: props === null || props === void 0 ? void 0 : props.borderColor,\n            lang: props === null || props === void 0 ? void 0 : props.lang,\n            tweetLimit: props === null || props === void 0 ? void 0 : props.tweetLimit,\n            ariaPolite: props === null || props === void 0 ? void 0 : props.ariaPolite\n        });\n        return options;\n    };\n    var buildChromeOptions = function buildChromeOptions(options) {\n        options.chrome = \"\";\n        if (props.noHeader) {\n            options.chrome = options.chrome + \" noheader\";\n        }\n        if (props.noFooter) {\n            options.chrome = options.chrome + \" nofooter\";\n        }\n        if (props.noBorders) {\n            options.chrome = options.chrome + \" noborders\";\n        }\n        if (props.noScrollbar) {\n            options.chrome = options.chrome + \" noscrollbar\";\n        }\n        if (props.transparent) {\n            options.chrome = options.chrome + \" transparent\";\n        }\n        return options;\n    };\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName]) {\n                    console.error(\"Method \" + methodName + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                var options = buildOptions();\n                options = buildChromeOptions(options);\n                window.twttr.widgets[methodName]({\n                    sourceType: props.sourceType,\n                    screenName: props.screenName,\n                    userId: props.userId,\n                    ownerScreenName: props.ownerScreenName,\n                    slug: props.slug,\n                    id: props.id || props.widgetId,\n                    url: props.url\n                }, ref === null || ref === void 0 ? void 0 : ref.current, options).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$1 = \"createShareButton\";\nvar TwitterShareButton = function TwitterShareButton(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$1]) {\n                    console.error(\"Method \" + methodName$1 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$1](props.url, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$2 = \"createFollowButton\";\nvar TwitterFollowButton = function TwitterFollowButton(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$2]) {\n                    console.error(\"Method \" + methodName$2 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$2](props.screenName, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$3 = \"createHashtagButton\";\nvar TwitterHashtagButton = function TwitterHashtagButton(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$3]) {\n                    console.error(\"Method \" + methodName$3 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$3](props.tag, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$4 = \"createMentionButton\";\nvar TwitterMentionButton = function TwitterMentionButton(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$4]) {\n                    console.error(\"Method \" + methodName$4 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$4](props.screenName, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$5 = \"createTweet\";\nvar TwitterTweetEmbed = function TwitterTweetEmbed(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$5]) {\n                    console.error(\"Method \" + methodName$5 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$5](props.tweetId, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$6 = \"createMoment\";\nvar TwitterMomentShare = function TwitterMomentShare(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$6]) {\n                    console.error(\"Method \" + methodName$6 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$6](props.momentId, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$7 = \"createDMButton\";\nvar TwitterDMButton = function TwitterDMButton(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$7]) {\n                    console.error(\"Method \" + methodName$7 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$7](props.id, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function(element) {\n                    if (isComponentMounted) {\n                        setLoading(false);\n                        if (props.onLoad) {\n                            props.onLoad(element);\n                        }\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$8 = \"createVideo\";\nvar TwitterVideoEmbed = function TwitterVideoEmbed(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$8]) {\n                    console.error(\"Method \" + methodName$8 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$8](props.id, ref === null || ref === void 0 ? void 0 : ref.current).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\nvar methodName$9 = \"createPeriscopeOnAirButton\";\nvar TwitterOnAirButton = function TwitterOnAirButton(props) {\n    var ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true), loading = _React$useState[0], setLoading = _React$useState[1];\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        var isComponentMounted = true;\n        var script = __webpack_require__(/*! scriptjs */ \"(ssr)/./node_modules/scriptjs/dist/script.js\");\n        script(twitterWidgetJs, \"twitter-embed\", function() {\n            if (!window.twttr) {\n                console.error(\"Failure to load window.twttr, aborting load\");\n                return;\n            }\n            if (isComponentMounted) {\n                if (!window.twttr.widgets[methodName$9]) {\n                    console.error(\"Method \" + methodName$9 + \" is not present anymore in twttr.widget api\");\n                    return;\n                }\n                window.twttr.widgets[methodName$9](props.username, ref === null || ref === void 0 ? void 0 : ref.current, props.options).then(function(element) {\n                    setLoading(false);\n                    if (props.onLoad) {\n                        props.onLoad(element);\n                    }\n                });\n            }\n        });\n        return function() {\n            isComponentMounted = false;\n        };\n    }, []);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.placeholder), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        ref: ref\n    }));\n};\n //# sourceMappingURL=index.modern.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-twitter-embed/dist/index.modern.js\n");

/***/ })

};
;